name: API Tests

on:
  pull_request:
    branches:
      - "main"
    paths:
      - "Api/**"

  workflow_dispatch:

env:
  DATABASE_URL: postgres://postgres:123456@localhost:5432/players

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      # Set up a PostgreSQL container for testing
      db:
        image: postgres:16
        env:
          POSTGRES_DB: players
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Api/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        working-directory: Api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run Linter (Flake8)
        working-directory: Api
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Unit Tests with Code Coverage
        working-directory: Api
        run: |
          pip install pytest-cov
          python -m pytest -v --cov-report=xml:cov.xml --cov=./ ./Tests/

      - name: Upload Code Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./Api/cov.xml

      - name: Save Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
